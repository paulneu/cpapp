"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../../common/utils");
const _1 = require(".");
/**
 * Generates the app specific schema of an object page out of the generic schema for the same page.
 * Generic types are replaced by information from the app specific annotations.
 *
 * @param genericSchema - generic JSON schema of a list report
 * @param entitySetName - the base entity set of the given page
 * @param annotations - list of all annotation files (file content plus URI as identifier)
 * @param manifest - manifest.json of the app
 * @param {ExtensionLogger} logger - Logger class for logging messages
 *
 * @returns the app specific JSON schema
 */
function generateObjectPageInterfaceV4(genericSchema, entitySet, annotations, manifest, logger) {
    const oDataServiceAVT = utils_1.parseAndMergeAndConvert(annotations, logger);
    return _1.generateObjectPageSchemaV4(genericSchema, entitySet, oDataServiceAVT, manifest, logger);
}
exports.generateObjectPageInterfaceV4 = generateObjectPageInterfaceV4;
/**
 * Generates the app specific schema of a list report out of the generic schema.
 * Generic types are replaced by information from the app specific annotations.
 *
 * @param genericSchema - generic JSON schema of a list report
 * @param entitySetName - the base entity set of the given page
 * @param annotations - list of all annotation files (file content plus URI as identifier)
 * @param {ExtensionLogger} logger - Logger class for logging messages
 *
 * @returns the app specific JSON schema
 */
function generateListReportInterfaceV4(genericSchema, entitySetName, annotations, logger) {
    const oDataServiceAVT = utils_1.parseAndMergeAndConvert(annotations, logger);
    const entitySet = oDataServiceAVT.entitySets.find((es) => es.name === entitySetName);
    return _1.generateListReportSchemaV4(genericSchema, entitySet.entityType.name, oDataServiceAVT, logger);
}
exports.generateListReportInterfaceV4 = generateListReportInterfaceV4;
//# sourceMappingURL=generate.js.map